<launch>
  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="model" default="$(find gazebo_sim)/urdf/minicar_description/minicar.xacro"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name"  value="$(find gazebo_sim)/world/402_test"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
    </include>

  <param name="robot_description" command="$(find xacro)/xacro.py $(arg model)" />

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
        args="-z 1.0 -unpause -urdf -model robot -param robot_description" respawn="false" output="screen" />

    <!-- Load joint controller configurations from YAML file to parameter serve
  <rosparam file="$(find gazebo_sim)/config/minicar_control.yaml" command="load"/>
  <node name="controller_spawner" pkg="controller_manager" type="spawner"
    args="joint_state_controller
          leftWheel_effort_controller
          rightWheel_effort_controller"/>

r -->
  <node pkg="robot_state_publisher" type="robot_state_publisher"  name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
  </node>

  <!-- amcl -->
  <arg name="map_file" default="$(find gazebo_sim)/map/sim_map.yaml"/>
  <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)">
    <remap from="map" to="map"/>
  </node>

  <!-- amcl node -->
  <node pkg="amcl" type="amcl" name="amcl">
    <remap from="scan" to="scan" />
      <!-- Publish scans from best pose at a max of 10 Hz -->
    <param name="use_map_topic" value="true" />
    <param name="odom_model_type" value="diff" />
    <param name="odom_alpha5" value="0.1" />
    <param name="transform_tolerance" value="0.5" />
    <param name="gui_publish_rate" value="10.0" />
    <param name="laser_max_beams" value="300" />
    <param name="min_particles" value="500" />
    <param name="max_particles" value="5000" />
    <param name="kld_err" value="0.1" />
    <param name="kld_z" value="0.99" />
    <param name="odom_alpha1" value="0.1" />
    <param name="odom_alpha2" value="0.5" />
    <!-- translation std dev, m -->
    <param name="odom_alpha3" value="0.5" />
    <param name="odom_alpha4" value="0.1" />
    <param name="laser_z_hit" value="0.9" />
    <param name="laser_z_short" value="0.05" />
    <param name="laser_z_max" value="0.05" />
    <param name="laser_z_rand" value="0.5" />
    <param name="laser_sigma_hit" value="0.2" />
    <param name="laser_lambda_short" value="0.1" />
    <param name="laser_lambda_short" value="0.1" />
    <!-- <param name="laser_model_type" value="likelihood_field" /> -->
    <param name="laser_model_type" value="beam" />
    <param name="laser_min_range" value="1" />
    <param name="laser_max_range" value="5" />
    <param name="laser_likelihood_max_dist" value="2.0" />
    <param name="update_min_d" value="0.2" />
    <param name="update_min_a" value="0.5" />
    <param name="resample_interval" value="1"/>
    <param name="transform_tolerance" value="0.1" />
    <param name="recovery_alpha_slow" value="0.99" />
    <param name="recovery_alpha_fast" value="0.80" />
  </node>

  <!-- rviz -->
  <node pkg="rviz" type="rviz" name="rviz" />
  <!-- teleop -->
  <node pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" name="teleop" />

</launch>
